interface PacketGameObject {
    /**
     * Text id that gameobject acquired from the server
     */
    id: string,
    /**
     * X coordinate of the gameobject's position
     */
    x: number,
    /**
     * Y coordinate of the gameobject's position
     */
    y: number,
    /**
     * Rotation in RADIANS
     */
    rot: number

}

interface PacketTank extends PacketGameObject {
    /**
     * Turret rotation in RADIANS
     */
    turrRot: number,
    /**
     * String ID of the player that owns this tank, this id is generated
     * by socket.io
     */
    plID: string
}

interface PacketPlayerInfo {
    /**
     * Id of the player generated by socket.io
     */
    id: string,
    /**
     * Name of the player
     */
    name: string,
    /**
     * Object that contains information about current player's statistics
     */
    stats?: any,
    /**
     * Determine if player is currently alive on the server
     */
    alive: boolean
    /**
     * Information about player's tank
     */
    tank?: PacketTank
}

interface PacketShotStart extends PacketGameObject {
    /**
     * Type of the shot
     */
    type: string,
    /**
     * X coordinate of the start position
     */
    startX: number,
    /**
     * Y coordinate of the start position
     */
    startY: number,
    /**
     * The time indicating when the shot was created on the server
     */
    startTime: number,
    /**
     * socket.io ID of the player that shoot this shot
     */
    ownerID: string
    /**
     * X coordinate of the shot's endpoint
     */
    endX?: number,
    /**
     * Y coordinate of the shot's endpoint
     */
    endY?: number,
    /**
     * Speed of the shot
     */
    speed?: number
}

interface PacketRespawn extends PacketTank {
    /**
     * Time when the respawn countdown starts
     */
    serverTime: number,
    /**
     * Time to the actual respawn
     */
    respawnDelay: number,
    /**
     * How long immunity is after tank is actually respawned
     */
    immunityTime: number
}

interface PacketItem extends PacketGameObject {

}

interface PacketGameInfo {
    players: PacketPlayerInfo[],
    items: PacketItem[]
}

interface PacketMovable {
    players: PacketTank[]
}
